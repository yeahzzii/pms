<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:task="http://www.springframework.org/schema/task" 
   xmlns:aop="http://www.springframework.org/schema/aop" 
   xmlns:context="http://www.springframework.org/schema/context"
      xmlns:mvc="http://www.springframework.org/schema/mvc"
   xmlns:p="http://www.springframework.org/schema/p"
   xmlns:c="http://www.springframework.org/schema/c"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:websocket="http://www.springframework.org/schema/websocket"
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    
   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd       
        http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd     
        http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
         http://www.springframework.org/schema/websocket
      http://www.springframework.org/schema/websocket/spring-websocket.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd   
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd   
      " >
	<context:component-scan base-package="pms">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>
	
	<context:property-placeholder location="classpath:resource/configure"/>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.user}"/>
		<property name="password" value="${jdbc.pass}"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:resource/mybatis.Spring.xml"/>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="pms.a01_Haeun.a03_DAO,
											pms.a01_Heonyong.a03_DAO,
											pms.a01_Jangho.a03_DAO,
											pms.a01_Jongdae.a03_DAO,
											pms.a01_Sechan.a03_DAO,
											pms.a01_Yeji.a03_DAO"/>
	</bean>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="order" value="1"/>
    </bean>
    <!-- 
    3. 기타 뷰 (json, 파일 다운로드, 엑셀 다운로드 등등)
     -->
    <bean id="btnViewReslover" class="org.springframework.web.servlet.view.BeanNameViewResolver">
    	<property name="order" value="0"/>
    </bean>
    <!-- 
    4. json뷰
     -->
    <bean id="pageJsonReport" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
    	<property name="contentType" value="text/html;charset=utf-8"/>
    </bean>
    <!-- 
    5. 파일 업로드 뷰
     -->
     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
     
     </bean>
    <!-- 
    6. 파일 다운로드 뷰
     -->
     <bean id="" class=""/>
     
     <!-- 
     7. 웹 소켓 통신
     	hadnler(java) <==> client(js)
      -->
     <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>
     <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>
     <mvc:default-servlet-handler/>
     <!-- 특정 url주소로 handelr 객체를 호출 
     	/chat-ws.do 를 호출해서 서벙[ handler 객체를 호출
     -->
     <websocket:handlers>
     	<websocket:mapping handler="chatHandler" path="/chat-ws.do"/>
     	<websocket:handshake-interceptors>
     		<bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
     	<!-- 로그인한 유저의 아이디를 알려면 http세션을 써야한다. 웹 소켓 세션에다가 http세션을 올려줘야
     	접근이 가능하다. -->
     	</websocket:handshake-interceptors>
     </websocket:handlers>

</beans>
